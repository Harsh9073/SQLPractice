import com.mongodb.client.*;
import org.bson.Document;
import java.util.Scanner;
import org.mindrot.jbcrypt.BCrypt;

public class AuthSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Connecting to MongoDB
        try (MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017")) {
            MongoDatabase database = mongoClient.getDatabase("UserDB");
            MongoCollection<Document> collection = database.getCollection("users");

            // Asking user for credentials
            System.out.print("Enter Username: ");
            String username = scanner.nextLine();
            System.out.print("Enter Password: ");
            String password = scanner.nextLine();

            // Fetch user data from database
            Document query = new Document("username", username);
            Document user = collection.find(query).first();

            if (user != null) {
                String storedHashedPassword = user.getString("password");
                if (BCrypt.checkpw(password, storedHashedPassword)) {
                    System.out.println("Authentication successful. Access granted!");
                    // User can perform further operations here
                } else {
                    System.out.println("Authentication failed. Incorrect password.");
                }
            } else {
                System.out.println("Authentication failed. User not found.");
            }
        } catch (Exception e) {
            System.out.println("Database connection error: " + e.getMessage());
        }
    }

    // Method to hash password before storing it
    public static String hashPassword(String password) {
        return BCrypt.hashpw(password, BCrypt.gensalt());
    }
}